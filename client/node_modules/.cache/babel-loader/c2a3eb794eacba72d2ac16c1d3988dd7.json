{"ast":null,"code":"var _jsxFileName = \"/home/lap12590/Documents/project/ZPFCaro/client/src/components/GameBoard.jsx\";\nimport GameCell from '../subcomponents/GameCell';\nimport React from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport './GameBoard.css';\n\nclass GameRow extends React.Component {\n  render() {\n    let classes = 'gc-game-cell d-flex justify-content-center align-content-center ' + this.props.className + ' ' + this.props.pattern;\n    let cells = [];\n\n    for (let i = 0; i < this.props.size; i++) {\n      let tmp = React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(GameCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n      cells.push(tmp);\n    }\n\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, cells);\n  }\n\n}\n\nclass GameBoard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let classes = 'gb-game-board ' + this.props.className + ' ' + this.props.pattern;\n    let rows = [];\n\n    for (let i = 0; i < this.props.height; i++) {\n      rows.push(React.createElement(GameRow, {\n        size: this.props.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"table\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, rows);\n  }\n\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["/home/lap12590/Documents/project/ZPFCaro/client/src/components/GameBoard.jsx"],"names":["GameCell","React","Container","Row","Col","GameRow","Component","render","classes","props","className","pattern","cells","i","size","tmp","push","GameBoard","constructor","rows","height","width"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAO,iBAAP;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAClCC,EAAAA,MAAM,GAAE;AACJ,QAAIC,OAAO,GAAG,qEAAoE,KAAKC,KAAL,CAAWC,SAA/E,GAA2F,GAA3F,GAAiG,KAAKD,KAAL,CAAWE,OAA1H;AAEA,QAAIC,KAAK,GAAG,EAAZ;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAL,CAAWK,IAA/B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAIE,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAAV;AACAH,MAAAA,KAAK,CAACI,IAAN,CAAWD,GAAX;AACH;;AAGD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KADL,CADJ;AAKH;;AAjBiC;;AAoBtC,MAAMK,SAAN,SAAwBhB,KAAK,CAACK,SAA9B,CAAwC;AACpCY,EAAAA,WAAW,CAACT,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDF,EAAAA,MAAM,GAAE;AACJ,QAAIC,OAAO,GAAG,mBAAkB,KAAKC,KAAL,CAAWC,SAA7B,GAAyC,GAAzC,GAA+C,KAAKD,KAAL,CAAWE,OAAxE;AAEA,QAAIQ,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAL,CAAWW,MAA/B,EAAuCP,CAAC,EAAxC,EAA4C;AACxCM,MAAAA,IAAI,CAACH,IAAL,CAAU,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWY,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH;;AAED,WACI;AAAO,MAAA,SAAS,EAAEb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCW,IADD,CADJ;AAKH;;AAnBmC;;AAwBxC,eAAeF,SAAf","sourcesContent":["import GameCell from '../subcomponents/GameCell'\nimport React from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport './GameBoard.css';\n\nclass GameRow extends React.Component {\n    render(){\n        let classes = 'gc-game-cell d-flex justify-content-center align-content-center '+ this.props.className + ' ' + this.props.pattern;\n        \n        let cells = [];\n\n        for (let i = 0; i < this.props.size; i++) {\n            let tmp = <td><GameCell/></td>\n            cells.push(tmp);         \n        }\n        \n        \n        return (\n            <tr>\n                {cells}\n            </tr>\n        );\n    }\n}\n\nclass GameBoard extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        let classes = 'gb-game-board '+ this.props.className + ' ' + this.props.pattern;\n\n        let rows = [];\n\n        for (let i = 0; i < this.props.height; i++) {\n            rows.push(<GameRow size={this.props.width}/>);         \n        }\n\n        return (\n            <table className={classes}>\n            {rows}\n            </table>\n        );\n    }\n\n\n}\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}