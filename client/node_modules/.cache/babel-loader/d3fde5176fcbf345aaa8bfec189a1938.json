{"ast":null,"code":"var _jsxFileName = \"/home/lap12590/Documents/project/ZPFCaro/client/src/components/EditText.js\";\nimport React from 'react';\nimport './EditText.css';\nimport { InputGroup, FormControl } from 'react-bootstrap';\n\nclass EditText extends React.Component {\n  constructor(props) {\n    super(props); // this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    let icon, alt, placeholder, type, pattern, title, required, value, disabled;\n\n    if (this.props.type === \"newpassword\") {\n      icon = require(\"../media/icon-seen.png\");\n    } else {\n      icon = require(\"../media/icon-edit.png\");\n      disabled = \"disabled\";\n    }\n\n    switch (this.props.type) {\n      case \"password\":\n        alt = \"icon-password\";\n        type = \"password\";\n        placeholder = \"***************\";\n        pattern = \".{6,}\";\n        title = \"Password contains at least 6 characters\";\n        required = \"required\";\n        break;\n\n      case \"newpassword\":\n        alt = \"icon-password\";\n        type = \"password\";\n        placeholder = \"New Password\";\n        pattern = \".{6,}\";\n        title = \"Password contains at least 6 characters\";\n        required = \"required\";\n        break;\n\n      case \"email\":\n        alt = \"icon-email\";\n        type = \"email\";\n        value = this.props.email;\n        pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\";\n        required = \"required\";\n        break;\n\n      case \"displayedname\":\n        alt = \"icon-displayed-name\";\n        type = \"text\";\n        value = this.props.displayedname;\n        pattern = \".{5,25}\";\n        title = \"Displayed name contains 5 to 25 characters\";\n        required = \"required\";\n        break;\n\n      default:\n        break;\n    }\n\n    return React.createElement(InputGroup, {\n      className: \"input-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      disabled: disabled,\n      placeholder: placeholder,\n      type: type,\n      pattern: pattern,\n      title: title,\n      value: value,\n      required: required,\n      onChange: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(InputGroup.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icon,\n      alt: alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default EditText;","map":{"version":3,"sources":["/home/lap12590/Documents/project/ZPFCaro/client/src/components/EditText.js"],"names":["React","InputGroup","FormControl","EditText","Component","constructor","props","render","icon","alt","placeholder","type","pattern","title","required","value","disabled","require","email","displayedname","handleClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAJ,EAAUC,GAAV,EAAeC,WAAf,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,KAA3C,EAAkDC,QAAlD,EAA4DC,KAA5D,EAAmEC,QAAnE;;AAEA,QAAI,KAAKV,KAAL,CAAWK,IAAX,KAAoB,aAAxB,EAAuC;AACnCH,MAAAA,IAAI,GAAGS,OAAO,CAAC,wBAAD,CAAd;AACH,KAFD,MAGK;AACDT,MAAAA,IAAI,GAAGS,OAAO,CAAC,wBAAD,CAAd;AACAD,MAAAA,QAAQ,GAAG,UAAX;AACH;;AAED,YAAQ,KAAKV,KAAL,CAAWK,IAAnB;AACI,WAAK,UAAL;AACIF,QAAAA,GAAG,GAAG,eAAN;AACAE,QAAAA,IAAI,GAAG,UAAP;AACAD,QAAAA,WAAW,GAAG,iBAAd;AACAE,QAAAA,OAAO,GAAG,OAAV;AACAC,QAAAA,KAAK,GAAG,yCAAR;AACAC,QAAAA,QAAQ,GAAG,UAAX;AACA;;AACJ,WAAK,aAAL;AACIL,QAAAA,GAAG,GAAG,eAAN;AACAE,QAAAA,IAAI,GAAG,UAAP;AACAD,QAAAA,WAAW,GAAG,cAAd;AACAE,QAAAA,OAAO,GAAG,OAAV;AACAC,QAAAA,KAAK,GAAG,yCAAR;AACAC,QAAAA,QAAQ,GAAG,UAAX;AACA;;AACJ,WAAK,OAAL;AACIL,QAAAA,GAAG,GAAG,YAAN;AACAE,QAAAA,IAAI,GAAG,OAAP;AACAI,QAAAA,KAAK,GAAG,KAAKT,KAAL,CAAWY,KAAnB;AACAN,QAAAA,OAAO,GAAG,wCAAV;AACAE,QAAAA,QAAQ,GAAG,UAAX;AACA;;AACJ,WAAK,eAAL;AACIL,QAAAA,GAAG,GAAG,qBAAN;AACAE,QAAAA,IAAI,GAAG,MAAP;AACAI,QAAAA,KAAK,GAAG,KAAKT,KAAL,CAAWa,aAAnB;AACAP,QAAAA,OAAO,GAAG,SAAV;AACAC,QAAAA,KAAK,GAAG,4CAAR;AACAC,QAAAA,QAAQ,GAAG,UAAX;AACA;;AACJ;AACI;AAjCR;;AAoCA,WACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEE,QAAvB;AACI,MAAA,WAAW,EAAEN,WADjB;AAEI,MAAA,IAAI,EAAEC,IAFV;AAGI,MAAA,OAAO,EAAEC,OAHb;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,KAAK,EAAEE,KALX;AAMI,MAAA,QAAQ,EAAED,QANd;AAOI,MAAA,QAAQ,EAAE,KAAKM,WAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEZ,IAAV;AAAgB,MAAA,GAAG,EAAEC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAVJ,CADJ;AAoBH;;AA1EkC;;AA6EvC,eAAeN,QAAf","sourcesContent":["import React from 'react';\nimport './EditText.css';\nimport { InputGroup, FormControl } from 'react-bootstrap';\n\nclass EditText extends React.Component {\n\n    constructor(props) {\n      super(props);\n      // this.handleClick = this.handleClick.bind(this);\n    }\n\n    render() {\n        let icon, alt, placeholder, type, pattern, title, required, value, disabled;\n\n        if (this.props.type === \"newpassword\") {\n            icon = require(\"../media/icon-seen.png\");\n        }\n        else {\n            icon = require(\"../media/icon-edit.png\");\n            disabled = \"disabled\";\n        }\n        \n        switch (this.props.type) {\n            case \"password\":\n                alt = \"icon-password\";\n                type = \"password\";\n                placeholder = \"***************\";\n                pattern = \".{6,}\";\n                title = \"Password contains at least 6 characters\";\n                required = \"required\";\n                break;\n            case \"newpassword\":\n                alt = \"icon-password\";\n                type = \"password\";\n                placeholder = \"New Password\";\n                pattern = \".{6,}\";\n                title = \"Password contains at least 6 characters\";\n                required = \"required\";\n                break;\n            case \"email\":\n                alt = \"icon-email\";\n                type = \"email\";\n                value = this.props.email;\n                pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\";\n                required = \"required\";\n                break;\n            case \"displayedname\":\n                alt = \"icon-displayed-name\";\n                type = \"text\";\n                value = this.props.displayedname;\n                pattern = \".{5,25}\";\n                title = \"Displayed name contains 5 to 25 characters\";\n                required = \"required\";\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <InputGroup className=\"input-text\">\n                <FormControl disabled={disabled}\n                    placeholder={placeholder}\n                    type={type}\n                    pattern={pattern}\n                    title={title}\n                    value={value}\n                    required={required}\n                    onChange={this.handleClick}\n                />\n                <InputGroup.Append>\n                    <InputGroup.Text>\n                        <a href=\"#\">\n                            <img src={icon} alt={alt}/>\n                        </a>\n                    </InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n        );\n    }\n}\n\nexport default EditText;"]},"metadata":{},"sourceType":"module"}