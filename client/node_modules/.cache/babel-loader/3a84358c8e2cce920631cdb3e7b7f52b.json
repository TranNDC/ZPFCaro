{"ast":null,"code":"var _jsxFileName = \"/home/lap12590/Documents/project/ZPFCaro/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport RectButton from './components/RectButton.js';\nimport CircleButton from './components/CircleButton.js';\nimport InputText from './components/InputText.js';\nimport LogoTitle from './components/LogoTitle.js';\nimport EditText from './components/EditText.js';\nimport Slider from './components/Slider.js';\nimport Message from './components/Message.js';\nimport ChatFrame from './components/ChatFrame.js'; // -------------------------------\n// TEST RECTBUTTON\n// -------------------------------\n// ReactDOM.render(<RectButton text=\"button\" background=\"gray\" textColor=\"black\" />, document.getElementById('root'));\n// background=\"gray\" => Nếu không có background sẽ là màu cam\n// textColor=\"black\" => Nếu không có chữ sẽ mang màu trắng\n// -------------------------------\n// TEST INPUTTEXT\n// -------------------------------\n// type: username | password | confirmedpassword | email | displayedname | roompassword | betpoints | roomname\n\nReactDOM.render(React.createElement(InputText, {\n  type: \"username\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), document.getElementById('root')); // -------------------------------\n// TEST EDITTEXT\n// -------------------------------\n// type: password | newpassword | email | displayedname\n// ReactDOM.render(<EditText type=\"email\" email=\"Kienquoctran08@gmail.com\" />, document.getElementById('root'));\n// ReactDOM.render(<EditText type=\"displayedname\" displayedname=\"Trần Kiến Quốc\" />, document.getElementById('root'));\n// ReactDOM.render(<EditText type=\"password\" />, document.getElementById('root'));\n// ReactDOM.render(<EditText type=\"newpassword\" />, document.getElementById('root'));\n// -------------------------------\n// TEST HEADINGICON\n// -------------------------------\n// type: profile | rules | info | settings | logout\n// ReactDOM.render(<CircleButton type=\"profile\" />, document.getElementById('root'));\n// -------------------------------\n// TEST LOGOTITLE\n// -------------------------------\n// ReactDOM.render(<LogoTitle text=\"ZPF Caro\" />, document.getElementById('root'));\n// -------------------------------\n// SLIDER\n// -------------------------------\n// type: | sounds | media | \n// ReactDOM.render(<Slider type=\"Media\" />, document.getElementById('root'));\n// -------------------------------\n// MESSAGE\n// -------------------------------\n// type: | response | recieve | \n// avatar: {avatarlink}\n// message\n// let avatar = require(\"./media/avatar.png\")\n// ReactDOM.render(<Message type=\"response\" avatar={avatar} message=\"Chị hiểu hông?\" />, document.getElementById('root'));\n// -------------------------------\n// CHAT FRAME\n// -------------------------------\n// opponent {avatar, username,isHost}\n// messages {type, avatar, message}\n\nlet avatar = require(\"./media/avatar.png\");\n\nlet opponent = {\n  'avatar': {\n    avatar\n  },\n  'username': 'Trann Nguyen',\n  'isHost': 0\n};\nlet messages = [{\n  'type': 'response',\n  'avatar': avatar,\n  'message': \"hello What are you doing mannnn??\"\n}, {\n  'type': 'resquest',\n  'avatar': avatar,\n  'message': \"hello What the heooo mann??ahoifshoiahfsoiahfsssssssss\"\n}, {\n  'type': 'resquest',\n  'avatar': avatar,\n  'message': \"......!!\"\n}, {\n  'type': 'response',\n  'avatar': avatar,\n  'message': \"......!!\"\n}, {\n  'type': 'response',\n  'avatar': avatar,\n  'message': \"......!!\"\n}, {\n  'type': 'response',\n  'avatar': avatar,\n  'message': \"......!!\"\n}, {\n  'type': 'response',\n  'avatar': avatar,\n  'message': \"......!!\"\n}, {\n  'type': 'response',\n  'avatar': avatar,\n  'message': \"......!!\"\n}, {\n  'type': 'response',\n  'avatar': avatar,\n  'message': \"......!!\"\n}];\nReactDOM.render(React.createElement(ChatFrame, {\n  opponent: opponent,\n  messages: messages,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/lap12590/Documents/project/ZPFCaro/client/src/index.js"],"names":["React","ReactDOM","RectButton","CircleButton","InputText","LogoTitle","EditText","Slider","Message","ChatFrame","render","document","getElementById","avatar","require","opponent","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AAEA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,2BAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AACAR,QAAQ,CAACS,MAAT,CAAgB,oBAAC,SAAD;AAAW,EAAA,IAAI,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA+CC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA/C,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAG;AACX,YAAU;AAACF,IAAAA;AAAD,GADC;AAEX,cAAY,cAFD;AAGX,YAAU;AAHC,CAAf;AAMA,IAAIG,QAAQ,GAAG,CACX;AACI,UAAO,UADX;AAEI,YAASH,MAFb;AAGI,aAAU;AAHd,CADW,EAMX;AACI,UAAO,UADX;AAEI,YAASA,MAFb;AAGI,aAAU;AAHd,CANW,EAWX;AACI,UAAO,UADX;AAEI,YAASA,MAFb;AAGI,aAAU;AAHd,CAXW,EAiBX;AACI,UAAO,UADX;AAEI,YAASA,MAFb;AAGI,aAAU;AAHd,CAjBW,EAsBX;AACI,UAAO,UADX;AAEI,YAASA,MAFb;AAGI,aAAU;AAHd,CAtBW,EA2BX;AACI,UAAO,UADX;AAEI,YAASA,MAFb;AAGI,aAAU;AAHd,CA3BW,EAgCX;AACI,UAAO,UADX;AAEI,YAASA,MAFb;AAGI,aAAU;AAHd,CAhCW,EAqCX;AACI,UAAO,UADX;AAEI,YAASA,MAFb;AAGI,aAAU;AAHd,CArCW,EA0CX;AACI,UAAO,UADX;AAEI,YAASA,MAFb;AAGI,aAAU;AAHd,CA1CW,CAAf;AAiDAZ,QAAQ,CAACS,MAAT,CAAgB,oBAAC,SAAD;AAAW,EAAA,QAAQ,EAAEK,QAArB;AAA+B,EAAA,QAAQ,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAuEL,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvE","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nimport RectButton from './components/RectButton.js';\nimport CircleButton from './components/CircleButton.js';\nimport InputText from './components/InputText.js';\nimport LogoTitle from './components/LogoTitle.js';\nimport EditText from './components/EditText.js';\nimport Slider from './components/Slider.js'\nimport Message from './components/Message.js'\nimport ChatFrame from './components/ChatFrame.js'\n\n// -------------------------------\n// TEST RECTBUTTON\n// -------------------------------\n// ReactDOM.render(<RectButton text=\"button\" background=\"gray\" textColor=\"black\" />, document.getElementById('root'));\n// background=\"gray\" => Nếu không có background sẽ là màu cam\n// textColor=\"black\" => Nếu không có chữ sẽ mang màu trắng\n\n\n// -------------------------------\n// TEST INPUTTEXT\n// -------------------------------\n// type: username | password | confirmedpassword | email | displayedname | roompassword | betpoints | roomname\nReactDOM.render(<InputText type=\"username\" />, document.getElementById('root'));\n\n\n// -------------------------------\n// TEST EDITTEXT\n// -------------------------------\n// type: password | newpassword | email | displayedname\n// ReactDOM.render(<EditText type=\"email\" email=\"Kienquoctran08@gmail.com\" />, document.getElementById('root'));\n// ReactDOM.render(<EditText type=\"displayedname\" displayedname=\"Trần Kiến Quốc\" />, document.getElementById('root'));\n// ReactDOM.render(<EditText type=\"password\" />, document.getElementById('root'));\n// ReactDOM.render(<EditText type=\"newpassword\" />, document.getElementById('root'));\n\n\n// -------------------------------\n// TEST HEADINGICON\n// -------------------------------\n// type: profile | rules | info | settings | logout\n// ReactDOM.render(<CircleButton type=\"profile\" />, document.getElementById('root'));\n\n\n// -------------------------------\n// TEST LOGOTITLE\n// -------------------------------\n// ReactDOM.render(<LogoTitle text=\"ZPF Caro\" />, document.getElementById('root'));\n\n\n// -------------------------------\n// SLIDER\n// -------------------------------\n// type: | sounds | media | \n// ReactDOM.render(<Slider type=\"Media\" />, document.getElementById('root'));\n\n\n\n// -------------------------------\n// MESSAGE\n// -------------------------------\n// type: | response | recieve | \n// avatar: {avatarlink}\n// message\n// let avatar = require(\"./media/avatar.png\")\n// ReactDOM.render(<Message type=\"response\" avatar={avatar} message=\"Chị hiểu hông?\" />, document.getElementById('root'));\n\n\n// -------------------------------\n// CHAT FRAME\n// -------------------------------\n// opponent {avatar, username,isHost}\n// messages {type, avatar, message}\nlet avatar = require(\"./media/avatar.png\")\n\nlet opponent = {\n    'avatar': {avatar},\n    'username': 'Trann Nguyen',\n    'isHost': 0\n}\n\nlet messages = [\n    {\n        'type':'response',\n        'avatar':avatar,\n        'message':\"hello What are you doing mannnn??\"\n    },\n    {\n        'type':'resquest',\n        'avatar':avatar,\n        'message':\"hello What the heooo mann??ahoifshoiahfsoiahfsssssssss\"\n    },\n    {\n        'type':'resquest',\n        'avatar':avatar,\n        'message':\"......!!\"\n    }\n    ,\n    {\n        'type':'response',\n        'avatar':avatar,\n        'message':\"......!!\"\n    },\n    {\n        'type':'response',\n        'avatar':avatar,\n        'message':\"......!!\"\n    },\n    {\n        'type':'response',\n        'avatar':avatar,\n        'message':\"......!!\"\n    },\n    {\n        'type':'response',\n        'avatar':avatar,\n        'message':\"......!!\"\n    },\n    {\n        'type':'response',\n        'avatar':avatar,\n        'message':\"......!!\"\n    },\n    {\n        'type':'response',\n        'avatar':avatar,\n        'message':\"......!!\"\n    }\n]\n\nReactDOM.render(<ChatFrame opponent={opponent} messages={messages} />, document.getElementById('root'));\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}