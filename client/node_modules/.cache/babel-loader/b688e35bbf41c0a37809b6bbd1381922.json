{"ast":null,"code":"var _jsxFileName = \"/home/lap12590/Documents/project/ZPFCaro/client/src/subcomponents/InputText.js\";\nimport React from 'react';\nimport './InputText.css';\nimport { InputGroup, FormControl } from 'react-bootstrap';\n\nclass InputText extends React.Component {\n  constructor(props) {\n    super(props); // this.handleClick = this.handleClick.bind(this);\n\n    this.handleClick = function (e) {// this.props.onChangeValue(e.target.value);\n    };\n  }\n\n  render() {\n    let icon, alt, placeholder, type, pattern, title, required, minpts, maxpts;\n\n    switch (this.props.type) {\n      case 'username':\n        icon = require(\"../media/icon-user.png\");\n        alt = \"icon-user\";\n        type = \"text\";\n        placeholder = \"Username\";\n        pattern = \"[A-Za-z0-9]{5,25}\";\n        title = \"Username contains 5 to 25 letters or numbers\";\n        required = \"required\";\n        break;\n\n      case 'password':\n        icon = require(\"../media/icon-password.png\");\n        alt = \"icon-password\";\n        type = \"password\";\n        placeholder = \"Password\";\n        pattern = \".{6,}\";\n        title = \"Password contains at least 6 characters\";\n        required = \"required\";\n        break;\n\n      case 'confirmedpassword':\n        icon = require(\"../media/icon-confirm-password.png\");\n        alt = \"icon-confirm-password\";\n        type = \"password\";\n        placeholder = \"Confirmed Password\";\n        pattern = \".{6,}\";\n        title = \"Confirmed password contains at least 6 characters\";\n        required = \"required\";\n        break;\n\n      case 'email':\n        icon = require(\"../media/icon-email.png\");\n        alt = \"icon-email\";\n        type = \"email\";\n        placeholder = \"Email\";\n        pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\";\n        required = \"required\";\n        break;\n\n      case \"displayedname\":\n        icon = require(\"../media/icon-displayed-name.png\");\n        alt = \"icon-displayed-name\";\n        type = \"text\";\n        placeholder = \"Displayed Name\";\n        pattern = \".{5,25}\";\n        title = \"Displayed name contains 5 to 25 characters\";\n        required = \"required\";\n        break;\n\n      case 'roompassword':\n        icon = require(\"../media/icon-room-password.png\");\n        alt = \"icon-room-password\";\n        type = \"password\";\n        pattern = \".{2,}\";\n        title = \"Room password contains at least 2 characters\";\n        placeholder = \"Room Password\";\n        break;\n\n      case 'betpoints':\n        icon = require(\"../media/icon-rupee.png\");\n        alt = \"icon-rupee\";\n        type = \"number\";\n        minpts = 0;\n        maxpts = 100000;\n        placeholder = \"Bet Points\";\n        break;\n\n      case 'roomname':\n        icon = require(\"../media/icon-room.png\");\n        alt = \"icon-room\";\n        type = \"text\";\n        placeholder = \"Room Name\";\n        pattern = \".{2,}\";\n        title = \"Room name contains at least 2 characters\";\n        required = \"required\";\n        break;\n\n      default:\n        break;\n    }\n\n    return React.createElement(InputGroup, {\n      className: \"input-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(InputGroup.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icon,\n      alt: alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(FormControl, {\n      placeholder: placeholder,\n      type: type,\n      pattern: pattern,\n      title: title,\n      required: required,\n      min: minpts,\n      max: maxpts,\n      onChange: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default InputText;","map":{"version":3,"sources":["/home/lap12590/Documents/project/ZPFCaro/client/src/subcomponents/InputText.js"],"names":["React","InputGroup","FormControl","InputText","Component","constructor","props","handleClick","e","render","icon","alt","placeholder","type","pattern","title","required","minpts","maxpts","require"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './InputText.css';\nimport { InputGroup, FormControl } from 'react-bootstrap';\n\nclass InputText extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = function(e) {\n    // this.props.onChangeValue(e.target.value);\n  }\n\n  render() {\n    let icon, alt, placeholder, type, pattern, title, required, minpts, maxpts;\n\n    switch (this.props.type) {\n      case 'username':\n          icon = require(\"../media/icon-user.png\");\n          alt = \"icon-user\";\n          type = \"text\";\n          placeholder = \"Username\";\n          pattern = \"[A-Za-z0-9]{5,25}\";\n          title = \"Username contains 5 to 25 letters or numbers\";\n          required = \"required\";\n          break;\n      case 'password':\n          icon = require(\"../media/icon-password.png\");\n          alt = \"icon-password\";\n          type = \"password\";\n          placeholder = \"Password\";\n          pattern = \".{6,}\";\n          title = \"Password contains at least 6 characters\";\n          required = \"required\";\n          break;\n      case 'confirmedpassword':\n          icon = require(\"../media/icon-confirm-password.png\");\n          alt = \"icon-confirm-password\";\n          type = \"password\";\n          placeholder = \"Confirmed Password\";\n          pattern = \".{6,}\";\n          title = \"Confirmed password contains at least 6 characters\";\n          required = \"required\";\n          break;\n      case 'email':\n          icon = require(\"../media/icon-email.png\");\n          alt = \"icon-email\";\n          type = \"email\";\n          placeholder = \"Email\";\n          pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\";\n          required = \"required\";\n          break;\n      case \"displayedname\":\n          icon = require(\"../media/icon-displayed-name.png\");\n          alt = \"icon-displayed-name\";\n          type = \"text\";\n          placeholder = \"Displayed Name\";\n          pattern = \".{5,25}\";\n          title = \"Displayed name contains 5 to 25 characters\";\n          required = \"required\";\n          break;\n      case 'roompassword':\n          icon = require(\"../media/icon-room-password.png\");\n          alt = \"icon-room-password\";\n          type = \"password\";\n          pattern = \".{2,}\";\n          title = \"Room password contains at least 2 characters\";\n          placeholder = \"Room Password\";\n          break;\n      case 'betpoints':\n          icon = require(\"../media/icon-rupee.png\");\n          alt = \"icon-rupee\";\n          type = \"number\";\n          minpts = 0;\n          maxpts = 100000;\n          placeholder = \"Bet Points\";\n          break;\n      case 'roomname':\n          icon = require(\"../media/icon-room.png\");\n          alt = \"icon-room\";\n          type = \"text\";\n          placeholder = \"Room Name\";\n          pattern = \".{2,}\";\n          title = \"Room name contains at least 2 characters\";\n          required = \"required\";\n          break;\n      default:\n          break;\n    }\n\n    return (\n      <InputGroup className=\"input-text\">\n        <InputGroup.Prepend>\n          <InputGroup.Text>\n            <img src={icon} alt={alt}/>\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder={placeholder}\n          type={type}\n          pattern={pattern}\n          title={title}\n          required={required}\n          min={minpts}\n          max={maxpts}\n          onChange={this.handleClick}\n        />\n      </InputGroup>\n    );  \n  }\n}\n\nexport default InputText;"]},"metadata":{},"sourceType":"module"}